"""add lesson, rename comment to event

Revision ID: 7d9a3ecea88e
Revises: 616c853ace5e
Create Date: 2023-04-22 05:41:56.774468

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = "7d9a3ecea88e"
down_revision = "616c853ace5e"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "events",
        sa.Column("comment", sa.String(), nullable=False),
        sa.Column("base_amount", sa.Integer(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "lessons",
        sa.Column("group_id", sa.Integer(), nullable=False),
        sa.Column("starts_at", sa.DateTime(), nullable=False),
        sa.Column("ends_at", sa.DateTime(), nullable=False),
        sa.Column("theme", sa.String(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "created_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.ForeignKeyConstraint(
            ["group_id"],
            ["groups.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.drop_constraint(
        "score_entries_comment_id_fkey", "score_entries", type_="foreignkey"
    )
    op.drop_table("comments")
    op.add_column(
        "groups",
        sa.Column(
            "default_score_type",
            sa.Enum(
                "robotics",
                "electrics",
                "needlework",
                "intellect",
                "architecture",
                "games",
                "newspaper",
                "hikes",
                "competition_town",
                "competitions",
                name="scoretypeenum",
            ),
            nullable=True,
        ),
    )
    op.add_column("score_entries", sa.Column("lesson_id", sa.Integer(), nullable=False))
    op.add_column("score_entries", sa.Column("event_id", sa.Integer(), nullable=True))
    op.create_foreign_key(None, "score_entries", "events", ["event_id"], ["id"])
    op.create_foreign_key(None, "score_entries", "lessons", ["lesson_id"], ["id"])
    op.drop_column("score_entries", "comment_id")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "score_entries",
        sa.Column("comment_id", sa.INTEGER(), autoincrement=False, nullable=True),
    )
    op.drop_constraint(None, "score_entries", type_="foreignkey")
    op.drop_constraint(None, "score_entries", type_="foreignkey")
    op.create_foreign_key(
        "score_entries_comment_id_fkey",
        "score_entries",
        "comments",
        ["comment_id"],
        ["id"],
    )
    op.drop_column("score_entries", "event_id")
    op.drop_column("score_entries", "lesson_id")
    op.drop_column("groups", "default_score_type")
    op.create_table(
        "comments",
        sa.Column("comment", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("base_amount", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.PrimaryKeyConstraint("id", name="comments_pkey"),
    )
    op.drop_table("lessons")
    op.drop_table("events")
    # ### end Alembic commands ###
